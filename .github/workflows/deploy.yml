name: Frontend Deployment

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/nbbang-fe:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Deploy to Server via SSH and Run Container
        env:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        run: |
          printf "%s" "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem -tt $USERNAME@$HOST <<EOF
            echo "$SSH_PASSWORD" | sudo -S docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/nbbang-fe:latest

            # 새로운 프론트엔드 인스턴스를 Docker Compose로 시작
            cd /var/www
            echo "$SSH_PASSWORD" | sudo -S docker-compose up -d frontend_new

            # Nginx 설정에서 새로운 인스턴스로 트래픽 전환
            echo "$SSH_PASSWORD" | sudo -S sed -i 's/127.0.0.1:3000;/127.0.0.1:3001;/' /etc/nginx/sites-available/default
            echo "$SSH_PASSWORD" | sudo -S systemctl reload nginx

            # 기존 프론트엔드 컨테이너 정리
            echo "$SSH_PASSWORD" | sudo -S docker-compose stop frontend
            echo "$SSH_PASSWORD" | sudo -S docker-compose rm -f frontend

            # 새 프론트엔드 인스턴스 이름 변경
            echo "$SSH_PASSWORD" | sudo -S docker rename nbbang-fe-new nbbang-fe

            # Nginx 설정 원복
            echo "$SSH_PASSWORD" | sudo -S sed -i 's/127.0.0.1:3001;/127.0.0.1:3000;/' /etc/nginx/sites-available/default
            echo "$SSH_PASSWORD" | sudo -S systemctl reload nginx

          EOF
          rm private_key.pem
